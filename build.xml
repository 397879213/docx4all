<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="build" name="docx4all" xmlns:jw="org.unintelligible.antjnlpwar">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="../../../../usr/lib/eclipse"/>
    <property name="AppFramework-1.03.location" value="../AppFramework-1.03"/>
    <property name="docx4j.location" value="../docx4j"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.6"/>
    <property name="source" value="1.6"/>
    
	<property name="m2Repository" value="../../.m2/repository"/>
	
	<property name="plugins.javafx.lib" value="../../.eclipse/org.eclipse.platform_3.3.0_1606436040/configuration/eclipse/plugins/javafx.eclipse.f3editor_0.0.2/lib"/>
    
    <path id="AppFramework-1.03.classpath">
        <pathelement location="${AppFramework-1.03.location}/bin"/>
        <pathelement location="${AppFramework-1.03.location}/../../../../usr/lib/jvm/java-6-sun/jre/lib/javaws.jar"/>
        <pathelement location="${AppFramework-1.03.location}/lib/swing-worker.jar"/>
    </path>
    <path id="MavenDependencies.libraryclasspath.docx4all">
        <pathelement location="${m2Repository}/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar"/>
        <pathelement location="${m2Repository}/xml-apis/xml-apis/1.0.b2/xml-apis-1.0.b2.jar"/>
        <pathelement location="${m2Repository}/log4j/log4j/1.2.13/log4j-1.2.13.jar"/>
        <pathelement location="${m2Repository}/jaxen/jaxen/1.1.1/jaxen-1.1.1.jar"/>
        <pathelement location="${m2Repository}/jdom/jdom/1.0/jdom-1.0.jar"/>
        <pathelement location="${m2Repository}/commons-logging/commons-logging-api/1.1/commons-logging-api-1.1.jar"/>
        <pathelement location="${m2Repository}/commons-io/commons-io/1.3.1/commons-io-1.3.1.jar"/>
        <pathelement location="${m2Repository}/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar"/>
        <pathelement location="${m2Repository}/junit/junit/3.8.1/junit-3.8.1.jar"/>
        <pathelement location="${m2Repository}/commons-codec/commons-codec/1.2/commons-codec-1.2.jar"/>
        <pathelement location="${m2Repository}/axis/axis/1.4/axis-1.4.jar"/>
        <pathelement location="${m2Repository}/axis/axis-jaxrpc/1.4/axis-jaxrpc-1.4.jar"/>
        <pathelement location="${m2Repository}/axis/axis-saaj/1.4/axis-saaj-1.4.jar"/>
        <pathelement location="${m2Repository}/axis/axis-wsdl4j/1.5.1/axis-wsdl4j-1.5.1.jar"/>
        <pathelement location="${m2Repository}/commons-discovery/commons-discovery/0.2/commons-discovery-0.2.jar"/>
        <pathelement location="${m2Repository}/wss4j/wss4j/1.5.0/wss4j-1.5.0.jar"/>
        <!-- <pathelement location="${m2Repository}/bouncycastle/bcprov-jdk16/136/bcprov-jdk16-136.jar"/> -->
    </path>	
    <path id="MavenDependencies.libraryclasspath.docx4j">
        <pathelement location="${m2Repository}/commons-codec/commons-codec/1.2/commons-codec-1.2.jar"/>    	
        <pathelement location="${m2Repository}/commons-httpclient/commons-httpclient/3.0.1/commons-httpclient-3.0.1.jar"/>
        <pathelement location="${m2Repository}/commons-io/commons-io/1.3.1/commons-io-1.3.1.jar"/>
        <pathelement location="${m2Repository}/commons-logging/commons-logging/1.1/commons-logging-1.1.jar"/>    	
        <pathelement location="${m2Repository}/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar"/>
        <pathelement location="${m2Repository}/javax/jcr/jcr/1.0/jcr-1.0.jar"/>
        <pathelement location="${m2Repository}/jdom/jdom/1.0/jdom-1.0.jar"/>   
        <pathelement location="${m2Repository}/junit/junit/3.8.1/junit-3.8.1.jar"/>    	
        <pathelement location="${m2Repository}/log4j/log4j/1.2.13/log4j-1.2.13.jar"/>
        <pathelement location="${m2Repository}/xml-apis/xml-apis/1.3.03/xml-apis-1.3.03.jar"/>
    </path>
    <path id="docx4j.classpath">
        <pathelement location="${docx4j.location}/bin"/>
        <pathelement location="${docx4j.location}/lib/core-renderer.jar"/>
        <!--<pathelement location="${docx4j.location}/lib/core-renderer-minimal.jar"/>-->
        <pathelement location="${docx4j.location}/lib/minium.jar"/>
        <pathelement location="${docx4j.location}/lib/parent-pointer-plugin-1.0-SNAPSHOT.jar"/>
        <pathelement location="${docx4j.location}/lib/PDFRenderer.jar"/>
        <pathelement location="${docx4j.location}/lib/commons-vfs-1.1-patched-hc301-SNAPSHOT.jar"/>
        <pathelement location="${docx4j.location}/lib/webdavclient4j-core-0.91.jar"/>
        <pathelement location="${docx4j.location}/lib/webdavclient4j-vfs-0.91.jar"/>    	
        <pathelement location="${docx4j.location}/lib/fop-fonts.jar"/>
        <pathelement location="${docx4j.location}/lib/iText-2.0.8.jar"/>
		<pathelement location="${docx4j.location}/lib/xalan-2.7.0-patched-6396599-stripped.jar"/>
		<pathelement location="${docx4j.location}/lib/xmlgraphics-commons-1.3svn.jar"/>
        <path refid="MavenDependencies.libraryclasspath.docx4j"/>
    </path>
    <path id="docx4all.classpath">
        <pathelement location="build/classes"/>
        <path refid="AppFramework-1.03.classpath"/>
        <path refid="docx4j.classpath"/>
        <pathelement location="lib/bcprov-jdk16-136.jar"/> 
        <pathelement location="lib/Filters.jar"/>
        <pathelement location="lib/javafxrt.jar"/>
        <pathelement location="lib/swing-layout.jar"/>
        <pathelement location="lib/xmlsec-1.4.1.jar"/>
        <pathelement location="lib/opensaml-1.0.1.jar"/>    	
        <pathelement location="lib/bounce.jar"/>
        <pathelement location="lib/VFSJFileChooser-0.0.1beta2.jar"/>
        <pathelement location="lib/alfresco-web-service-client.jar"/>    	
        <path refid="MavenDependencies.libraryclasspath.docx4all"/>
    </path>
	<path id="jre.libs" description="Java runtime libraries">
	  <pathelement location="${java.home}\lib" />
	 </path>	
    <target name="init">
        <mkdir dir="build/classes"/>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="src" excludes="**/*.launch, **/*.java"/>
        </copy>
        <copy includeemptydirs="false" todir="build/classes">
            <fileset dir="script" excludes="**/*.launch, **/*.java"/>
        </copy>
    </target>
    <target name="clean">
        <delete file="./docx4all.jar"/>
        <delete file="./docx4all.war"/>
        <delete dir="build/classes"/>
        <delete dir="build/lib"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="${AppFramework-1.03.location}/build.xml" inheritAll="false" target="clean"/>
        <ant antfile="${docx4j.location}/build.xml" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="${AppFramework-1.03.location}/build.xml" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
        <ant antfile="${docx4j.location}/build.xml" inheritAll="false" target="build-project">
            <propertyset>
                <propertyref name="build.compiler"/>
            </propertyset>
        </ant>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac bootclasspathref="jre.libs" includeJavaRuntime="yes"
    			debug="true" debuglevel="${debuglevel}" 
        	destdir="build/classes" source="${source}" target="${target}">
        	<!-- bootclasspathref="jre.libs" includeJavaRuntime="yes"
        	     are necessary (except with Apple's Java6 on OSX) to get around:
        	     
        	     [javac] /home/dev/workspace/docx4all/src/org/docx4all/util/XmlUtil.java:108: cannot access com.sun.xml.internal.bind.marshaller.NamespacePrefixMapper
        	     
    			 [javac] class file for com.sun.xml.internal.bind.marshaller.NamespacePrefixMapper not found        	     
        	     
        	     See comment in org.docx4all.util.XmlUtil -->
            <src path="src"/>
            <classpath refid="docx4all.classpath"/>        	
        </javac>
        <javac debug="true" debuglevel="${debuglevel}" destdir="build/classes" source="${source}" target="${target}">
            <src path="script"/>
            <classpath refid="docx4all.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target description="copy Eclipse compiler jars to ant lib directory" name="init-eclipse-compiler">
        <copy todir="${ant.library.dir}">
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </copy>
        <unzip dest="${ant.library.dir}">
            <patternset includes="jdtCompilerAdapter.jar"/>
            <fileset dir="${ECLIPSE_HOME}/plugins" includes="org.eclipse.jdt.core_*.jar"/>
        </unzip>
    </target>
    <target description="compile project with Eclipse compiler" name="build-eclipse-compiler">
        <property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter"/>
        <antcall target="build"/>
    </target>
    <target name="docx4all">
        <java classname="org.docx4all.ui.main.WordMLEditor" failonerror="true" fork="yes">
            <jvmarg line="-Dlog4j.configuration=conf/log4j.properties"/>
            <classpath refid="docx4all.classpath"/>
        </java>
    </target>
    
  <!-- The Ant Web Start task 
  
  	   You may need to invoke ant with something like:
  	   
  	       ANT_OPTS="-Xmx512m -XX:MaxPermSize=256m" ant webstart  	   
  
  -->
    <typedef resource="org/unintelligible/antjnlpwar/antjnlpwar.xml" format="xml" uri="org.unintelligible.antjnlpwar"/>
    <target name="webstart"  depends="clean, build-project" >
		
		<property name="lib" value="./build/lib"/>
		
        <mkdir dir="${lib}"/>
		
		<jar destfile="docx4all.jar" basedir="build/classes"/> <!-- somewhere other than ${lib} -->
		
		<jar destfile="${lib}/docx4j.jar" basedir="${docx4j.location}/bin"/>		
		<jar destfile="${lib}/AppFramework-1.03.jar" basedir="${AppFramework-1.03.location}/bin"/>
		
		<!-- copy all the jar files! -->
		<copy todir="${lib}" flatten="true">
			<!-- requires Ant 1.7.0 -->
			<path>
			    <path refid="docx4all.classpath"/>
			</path>
		</copy>		
					
        <!-- Create a distributable WAR archive of the application using the following attributes:
         * tofile: the destination WAR file
         * codebase: where the application will be deployed to
         * title: the application name
         * vendor: your company name
         * pack200: create pack200 archives for quicker client downloads
         * signStorePass: the password to your Java certificate store (used to sign the jars)
         * signAlias: the name of the certificate to use (used to sign the jars)
         -->
        <jw:jnlpwar
            tofile="docx4all.war"
            codebase="http://localhost:8080/docx4all"
            title="docx4all"
            vendor="localhost"
            pack200="true"
            signStorepass="password"
            signAlias="alias">
            <!-- should work with a key defined as follows:
            
                     keytool -genkey -alias alias -dname "CN=A Developer, O=Open Source" -validity 9999 -keystore .keystore -keypass password -storepass password
                     
                     -->
            
                <!-- Add a normal and a short description -->
                <jw:description>cross platform WYSIWYG editor for docx files</jw:description>
                <jw:description kind="short">cross platform WYSIWYG editor for docx files</jw:description>
                <!-- Add an icon for the application 
                <jw:icon file="path/to/icon.jpg"/> -->
                <!-- Show a splash screen when the application launches 
                <jw:icon kind="splash" file="path/to/splash.jpg"/> -->
                <!-- Specify the minimal version of Java required by the app, along with
                 some command-line arguments -->
                <jw:j2se minVersion="1.5"> <!-- task doesn't support 1.6, nor href="http://java.sun.com/products/autodl/j2se" -->
                </jw:j2se>
                <!-- Add the libraries used by the application -->
                <lib dir="${lib}">
                    <include name="**/*.jar"/>
                </lib>
                <!-- Specify the main class for the application,
                 and the jar it is located in (can be duplicate from the lib element) -->
                <jw:application mainclass="org.docx4all.ui.main.WordMLEditor" jar="docx4all.jar"/>
        </jw:jnlpwar>
    </target>	
    
</project>
